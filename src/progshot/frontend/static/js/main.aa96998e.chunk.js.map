{"version":3,"sources":["components/SourceTitle.js","components/Source.js","components/Terminal.js","components/Variables.js","components/StackElement.js","components/Stack.js","App.js","reportWebVitals.js","index.js"],"names":["SourceTitle","filmInfo","currFilm","setCurrFilm","sendCommand","className","name","type","min","max","num_films","step","value","onChange","e","target","onMouseUp","toString","title","style","fontSize","onClick","Prism","manual","Source","currSource","code","useRef","useEffect","highlightAllUnder","current","film","ref","id","data-line","curr_lineno","Terminal","addToConsoleHistory","consoleHistory","consoleOutputLines","useState","command","setCommand","terminal","handleKeyDown","event","a","key","data-host","data-output","onKeyDown","Variables","variables","locals","StackElement","active","info","idx","file_string","code_string","Stack","stack","console","log","map","ele","curr","client","WebSocket","hooks","add","env","element","includes","lines","document","querySelector","linesHeight","offsetHeight","pre","getElementById","preHeight","scrollIntoView","scrollTop","scrollHeight","offsetTop","App","curr_film_idx","setCurrSource","setStack","setConsoleHistory","setConsoleOutputLines","consoleLineCount","setConsoleLineCount","onopen","send","JSON","stringify","onmessage","message","dataFromServer","parse","data","hasOwnProperty","source","c","s","isOutput","append","calculateOutputLines","match","length","output","start","end","orientation","flex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aa96998e.chunk.js","sourcesContent":["import '../App.css';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport SubdirectoryArrowLeftIcon from '@material-ui/icons/SubdirectoryArrowLeft';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\n\n\nconst SourceTitle = ({filmInfo, currFilm, setCurrFilm, sendCommand}) => {\n\n    return (\n        <div className=\"source-title section-title\">\n            <div className=\"film-name\">{filmInfo.name}</div>\n\n            <div className=\"slider-group\">\n                <input className=\"slider\" type=\"range\" min=\"1\" max={filmInfo.num_films} step=\"1\" value={currFilm}\n                    onChange={(e) => setCurrFilm(e.target.value)} onMouseUp={() => sendCommand(\"g \" + currFilm.toString(), \"command\")}></input>\n                <div className=\"film-number\">{currFilm.toString() + \"/\" + filmInfo.num_films.toString()}</div>\n            </div>\n\n            <div className=\"btn-group\">\n                <SubdirectoryArrowRightIcon className=\"button\" title=\"return\" style={{fontSize: 30}} onClick={() => sendCommand(\"return\", \"command\")}/>\n                <KeyboardArrowDownIcon className=\"button\" fontSize=\"large\" onClick={() => sendCommand(\"next\", \"command\")}/>\n                <KeyboardArrowRightIcon className=\"button\" fontSize=\"large\" onClick={() => sendCommand(\"step\", \"command\")}/>\n                <SubdirectoryArrowLeftIcon className=\"button\" style={{fontSize: 30}} onClick={() => sendCommand(\"rb\", \"command\")}/>\n                <KeyboardArrowUpIcon className=\"button\" fontSize=\"large\" onClick={() => sendCommand(\"back\", \"command\")}/>\n                <KeyboardArrowLeftIcon className=\"button\" fontSize=\"large\" onClick={() => sendCommand(\"stepback\", \"command\")}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SourceTitle; \n","import Prism from \"prismjs\"\nimport { useEffect, useRef} from \"react\";\nimport \"../prism.css\";\nimport '../App.css';\nimport 'prismjs/components/prism-python'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers'\nimport 'prismjs/plugins/line-highlight/prism-line-highlight'\nimport SourceTitle from './SourceTitle.js'\n\nPrism.manual = true;\nconst Source = ({currSource, currFilm, setCurrFilm, sendCommand}) => {\n    const code = useRef(null);\n    useEffect(() => {\n        Prism.highlightAllUnder(code.current);\n    })\n\n    return (\n        <div className=\"section\">\n            <SourceTitle filmInfo={currSource.film} currFilm={currFilm} setCurrFilm={setCurrFilm} sendCommand={sendCommand}/>\n            <div className=\"scrollable\">\n                <pre ref={code} id=\"source-code\" className=\"line-numbers source\" data-line={currSource.curr_lineno}>\n                    <code className=\"source-code language-py\">{currSource.code}</code>\n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default Source; \n","import Prism from \"prismjs\"\nimport { useEffect, useRef, useState } from \"react\";\nimport \"../prism.css\";\nimport '../App.css';\nimport 'prismjs/components/prism-python'\nimport 'prismjs/plugins/command-line/prism-command-line'\n\nconst Terminal = ({sendCommand, addToConsoleHistory, consoleHistory, consoleOutputLines}) => {\n    const [command, setCommand] = useState(\"\")\n    const terminal = useRef(null)\n\n    useEffect(() => {\n        Prism.highlightAllUnder(terminal.current);\n    })\n\n    const handleKeyDown = async (event) => {\n        if (event.key === 'Enter') {\n            addToConsoleHistory(command + \"\\n\", false)\n            if (command !== \"\") {\n                sendCommand(command, \"console\")\n            }\n            setCommand(\"\")\n        }\n    }\n\n    return (\n        <div className=\"section\">\n            <div className=\"section-title\">Terminal</div>\n            <div className=\"scrollable\">\n                <pre className=\"command-line terminal\" ref={terminal} data-host=\"psviewer\" data-output={consoleOutputLines}>\n                    <code className=\"language-py\">{consoleHistory}</code>\n                    <input className=\"mono-word terminal-input\" type=\"text\" id=\"input\" value={command} onChange={(e) => {setCommand(e.target.value)}} onKeyDown={(e) => handleKeyDown(e)}/>\n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default Terminal; \n","import Prism from \"prismjs\"\nimport { useEffect, useRef } from \"react\";\nimport \"../prism.css\";\nimport '../App.css';\nimport 'prismjs/components/prism-python'\n\nPrism.manual = true;\nconst Variables = ({currSource}) => {\n    const variables = useRef(null);\n\n    useEffect(() => {\n        Prism.highlightAllUnder(variables.current);\n    })\n\n    return (\n        <div className=\"section\">\n            <div className=\"section-title\">Variables</div>\n            <div className=\"scrollable\">\n                <pre className=\"variables\" ref={variables}>\n                    <code className=\"language-py\">{currSource.locals}</code>\n                </pre>\n            </div>\n        </div>\n    )\n}\n\nexport default Variables; \n","import Prism from \"prismjs\"\nimport { useEffect, useRef } from \"react\";\nimport \"../prism.css\";\nimport '../App.css';\nimport 'prismjs/components/prism-python'\n\nconst StackElement = ({active, info, sendCommand}) => {\n\n    const cls = () => {\n            if (active === info.idx) {\n                return \"active-stack\"\n            } else {\n                return \"\"\n            }\n        };\n\n    return (\n        <div className={\"mono-word stack-element \" + cls()} onClick={() => sendCommand(\"frame \" + info.idx.toString(), \"command\")}>\n            {info.file_string + \"\\n > \" + info.code_string + \"\\n\"}\n        </div>\n    )\n}\n\nexport default StackElement; \n","import Prism from \"prismjs\"\nimport { useEffect } from \"react\";\nimport \"../prism.css\";\nimport '../App.css';\nimport 'prismjs/components/prism-python'\nimport StackElement from './StackElement.js'\n\nconst Stack = ({stack, sendCommand}) => {\n    console.log(stack)\n    return (\n        <div className=\"section\">\n            <div className=\"section-title\">Stack</div>\n            <div className=\"scrollable\">\n                <div className=\"stack\">\n                    {stack.stack.map((ele) => {\n                        return <StackElement key={ele.idx} active={stack.curr} info={ele} sendCommand={sendCommand}/>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Stack; \n","import 'react-reflex/styles.css'\nimport {\n  ReflexContainer,\n  ReflexSplitter,\n  ReflexElement\n} from 'react-reflex'\nimport './App.css';\nimport {useState} from 'react'\nimport Source from './components/Source'\nimport Terminal from './components/Terminal'\nimport Variables from './components/Variables'\nimport Stack from './components/Stack'\nimport Prism from \"prismjs\"\n\nconst client = new WebSocket('ws://localhost:8080')\n\nPrism.hooks.add('complete', (env) => {\n  if (env.element.className.includes(\"source-code\") && env.code !== '') {\n    var lines = document.querySelector('.line-highlight')\n    var linesHeight = lines.offsetHeight\n    var pre = document.getElementById(\"source-code\")\n    var preHeight = pre.offsetHeight;\n\n    lines.scrollIntoView(false);\n\n    if (preHeight > linesHeight && pre.scrollTop <= (pre.scrollHeight - preHeight)) {\n        // var calculated = pre.scrollTop - (preHeight / 2) + (linesHeight / 2)\n        // pre.scrollTop = calculated >= 0 ? calculated : pre.scrollTop;\n        if (lines.offsetTop > preHeight) {\n          pre.scrollTop += preHeight / 2;\n        } else {\n          pre.scrollTop += lines.offsetTop - preHeight / 2;\n        }\n    }\n  }\n})\n\nfunction App() {\n  const [currSource, setCurrSource] = useState({\n    code: \"\",\n    curr_lineno: 0,\n    locals: \"\",\n    film: {\n      name: \"\",\n      num_films: 0,\n      curr_film_idx: 0\n    }\n  })\n  const [currFilm, setCurrFilm] = useState(0)\n  const [stack, setStack] = useState({\n    stack: [], \n    curr: 1\n  })\n  const [consoleHistory, setConsoleHistory] = useState(\"\\n\")\n  const [consoleOutputLines, setConsoleOutputLines] = useState(\"1\")\n  const [consoleLineCount, setConsoleLineCount] = useState(1)\n\n  client.onopen = () => {\n    client.send(JSON.stringify({\n      \"type\": \"init\",\n    }))\n  }\n\n  client.onmessage = (message) => {\n    const dataFromServer = JSON.parse(message.data);\n    if (dataFromServer.hasOwnProperty(\"source\")) {\n      setCurrSource(dataFromServer.source)\n      setCurrFilm(dataFromServer.source.film.curr_film_idx + 1)\n    }\n    if (dataFromServer.hasOwnProperty(\"console\")) {\n      addToConsoleHistory(dataFromServer.console, true)\n    }\n    if (dataFromServer.hasOwnProperty(\"stack\")) {\n      setStack(dataFromServer.stack)\n      console.log(stack)\n    }\n  }\n\n  const sendCommand = async (c, type) => {\n    var message \n    message = {\"type\": type,\n                \"command\": c.toString()}\n    client.send(JSON.stringify(message))\n  }\n\n  const addToConsoleHistory = (s, isOutput) => {\n    var append = s\n    if (isOutput) {\n      calculateOutputLines(append)\n    }\n    setConsoleHistory(consoleHistory + append)\n    setConsoleLineCount(consoleLineCount + (append.match(/\\n/g) || []).length)\n  }\n\n  const calculateOutputLines = (output) => {\n      const start = consoleLineCount + 1\n      const end = consoleLineCount + (output.match(/\\n/g) || []).length\n      setConsoleOutputLines(consoleOutputLines + \",\" + start.toString() + \"-\" + end.toString())\n  }\n\n  return (\n    <div className=\"App\">\n      <ReflexContainer className=\"container\" orientation=\"vertical\">\n        <ReflexElement>\n          <ReflexContainer orientation=\"horizontal\">\n            <ReflexElement flex={0.6}>\n              <Source currSource={currSource} currFilm={currFilm} setCurrFilm={setCurrFilm} sendCommand={sendCommand}/>\n            </ReflexElement>\n            <ReflexSplitter/>\n            <ReflexElement>\n              <Terminal sendCommand={sendCommand} addToConsoleHistory={addToConsoleHistory}\n                        consoleHistory={consoleHistory} consoleOutputLines={consoleOutputLines}/>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n\n      <ReflexSplitter/>\n\n        <ReflexElement>\n          <ReflexContainer orientation=\"horizontal\">\n            <ReflexElement flex={0.5} className=\"stack\">\n              <Stack stack={stack} sendCommand={sendCommand}/>\n            </ReflexElement>\n            <ReflexSplitter/>\n            <ReflexElement>\n              <Variables currSource={currSource}/>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n\n      </ReflexContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}